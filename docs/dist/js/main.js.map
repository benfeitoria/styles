{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\n// Set default percentage for progress bar examples large, medium and small\nprogressBar({\n  'percent': 50,\n  'id': 'example-progress-bar'\n});\nprogressBar({\n  'percent': 50,\n  'id': 'example-progress-bar-md'\n});\nprogressBar({\n  'percent': 50,\n  'id': 'example-progress-bar-sm'\n});\nprogressBar({\n  'id': 'live-example-c'\n});\nprogressBar({\n  'id': 'live-example-h',\n  'type': 'horizontal'\n}); // Live example circle progress bar\n\nvar inputCircle = document.querySelector('#live-example-value-c');\n\nif (inputCircle) {\n  inputCircle.addEventListener('change', function (e) {\n    progressBar({\n      'percent': inputCircle.value,\n      'id': 'live-example-c'\n    });\n  });\n} // Live example horizontal progress bar\n\n\nvar inputHorizontal = document.querySelector('#live-example-value-h');\n\nif (inputCircle) {\n  inputHorizontal.addEventListener('change', function (e) {\n    progressBar({\n      'percent': inputHorizontal.value,\n      'id': 'live-example-h',\n      'type': 'horizontal'\n    });\n  });\n}\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\nrequire('../../js/main');\n\nrequire('./components/progressbar');\n\n},{\"../../js/main\":9,\"./components/progressbar\":1}],3:[function(require,module,exports){\n\"use strict\";\n\n/**\r\n * Alert dismissible\r\n */\nvar alertDismissibles = document.querySelectorAll('.js-alert-dismissible');\nvar _iteratorNormalCompletion = true;\nvar _didIteratorError = false;\nvar _iteratorError = undefined;\n\ntry {\n  var _loop = function _loop() {\n    var alertDismissible = _step.value;\n\n    /**\r\n     * Deal with alert dismissibles\r\n     */\n    var element = alertDismissible.querySelector('.alert__close');\n\n    if (element) {\n      element.addEventListener('click', function (event) {\n        event.preventDefault();\n        element.parentElement.classList.add(\"fade-out\");\n      });\n    }\n  };\n\n  for (var _iterator = alertDismissibles[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n    _loop();\n  }\n} catch (err) {\n  _didIteratorError = true;\n  _iteratorError = err;\n} finally {\n  try {\n    if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n      _iterator[\"return\"]();\n    }\n  } finally {\n    if (_didIteratorError) {\n      throw _iteratorError;\n    }\n  }\n}\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nvar actions = document.getElementsByClassName(\"collapse__action\"); // Prevent access error\n\nfor (var i = 0; i < actions.length; i++) {\n  actions[i].addEventListener(\"click\", function (event) {\n    var element = event.currentTarget; // Not prevent default event in radio input\n\n    if (!(element.classList.contains('radio') && element.classList.contains('collapse__action'))) {\n      event.preventDefault();\n    } //Show/hidden multiple or single content when action is trigger\n\n\n    element.dataset.content.split(\",\").forEach(function (content_id) {\n      var collapse__content = document.getElementById(content_id); //Add class 'is-expanded' to one element at a time if aciton has class 'toggle'\n\n      if (element.classList.contains('toggle')) {\n        $(collapse__content).closest(\".collapse\").find(\".collapse__content\").removeClass(\"is-expanded\");\n        collapse__content.classList.add('is-expanded');\n      } else {\n        if (collapse__content.classList.contains('is-expanded')) {\n          collapse__content.classList.remove('is-expanded');\n        } else {\n          collapse__content.classList.add('is-expanded');\n        }\n      }\n    }); //Add class 'is-expanded' to one action at a time\n\n    if (element.classList.contains('toggle')) {\n      $(element).closest(\".collapse\").find('.collapse__action').removeClass(\"is-expanded\");\n      element.classList.add('is-expanded');\n    } else {\n      if (element.classList.contains('is-expanded')) {\n        element.classList.remove('is-expanded');\n      } else {\n        element.classList.add('is-expanded');\n      }\n    }\n  });\n}\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\ndocument.onreadystatechange = function () {\n  if (document.readyState === 'complete') {\n    setTimeout(function () {\n      var select_div_container, i, j, select_element, select_div, options_div, option_div;\n      /* Look for any elements with the class \"custom-select\" */\n\n      select_div_container = document.getElementsByClassName(\"custom-select\");\n\n      for (i = 0; i < select_div_container.length; i++) {\n        if (select_div_container[i].getElementsByTagName(\"select\")) {\n          select_element = select_div_container[i].getElementsByTagName(\"select\")[0];\n          /* For each element, create a new DIV that will act as the selected item */\n\n          select_div = document.createElement(\"DIV\");\n          select_div.setAttribute(\"class\", select_element.disabled ? \"custom-select__selected custom-select__selected--disabled\" : \"custom-select__selected\");\n          select_element.selectedIndex = select_element.selectedIndex > 0 ? select_element.selectedIndex : 0;\n          select_div.innerHTML = select_element.options[select_element.selectedIndex].innerHTML;\n          select_div_container[i].appendChild(select_div);\n          /* For each element, create a new DIV that will contain the option list */\n\n          options_div = document.createElement(\"DIV\");\n          options_div.setAttribute(\"class\", \"custom-select__items custom-select__items--hidden\");\n\n          for (j = 1; j < select_element.length; j++) {\n            /* For each option in the original select element,\r\n            create a new DIV that will act as an option item */\n            option_div = document.createElement(\"DIV\");\n            option_div.innerHTML = select_element.options[j].innerHTML;\n            option_div.addEventListener(\"click\", function (e) {\n              /* When an item is clicked, update the original select box,\r\n              and the selected item */\n              var y, i, k, s, h;\n              s = this.parentNode.parentNode.getElementsByTagName(\"select\")[0];\n              h = this.parentNode.previousSibling;\n\n              for (i = 0; i < s.length; i++) {\n                if (s.options[i].innerHTML == this.innerHTML) {\n                  s.selectedIndex = i;\n                  h.innerHTML = this.innerHTML;\n                  y = this.parentNode.getElementsByClassName(\"custom-select__items--selected\");\n\n                  for (k = 0; k < y.length; k++) {\n                    y[k].removeAttribute(\"class\");\n                  }\n\n                  this.setAttribute(\"class\", \"custom-select__items--selected\");\n                  break;\n                }\n              }\n\n              h.click();\n            });\n            options_div.appendChild(option_div);\n          }\n\n          select_div_container[i].appendChild(options_div);\n          select_div.addEventListener(\"click\", function (e) {\n            /* When the select box is clicked, close any other select boxes,\r\n            and open/close the current select box if not disabled */\n            e.stopPropagation();\n            closeAllSelect(this);\n            this.nextSibling.classList.toggle(\"custom-select__items--hidden\");\n            this.classList.toggle(\"custom-select__selected--active\");\n          });\n        }\n      }\n\n      function closeAllSelect(elmnt) {\n        /* A function that will close all select boxes in the document,\r\n        except the current select box */\n        var options_div,\n            option_selected,\n            i,\n            arrNo = [];\n        options_div = document.getElementsByClassName(\"custom-select__items\");\n        option_selected = document.getElementsByClassName(\"custom-select__selected\");\n\n        for (i = 0; i < option_selected.length; i++) {\n          if (elmnt == option_selected[i]) {\n            arrNo.push(i);\n          } else {\n            option_selected[i].classList.remove(\"custom-select__selected--active\");\n          }\n        }\n\n        for (i = 0; i < options_div.length; i++) {\n          if (arrNo.indexOf(i)) {\n            options_div[i].classList.add(\"custom-select__items--hidden\");\n          }\n        }\n      }\n      /* If the user clicks anywhere outside the select box,\r\n      then close all select boxes: */\n\n\n      document.addEventListener(\"click\", closeAllSelect);\n    }, 1000);\n  }\n};\n\n},{}],6:[function(require,module,exports){\n\"use strict\";\n\n/**\r\n * Top navigation mobile actions\r\n */\nvar mobileTopNavigations = document.querySelectorAll('.navigation--top--mobile');\nvar _iteratorNormalCompletion = true;\nvar _didIteratorError = false;\nvar _iteratorError = undefined;\n\ntry {\n  var _loop = function _loop() {\n    var mobileTopNavigation = _step.value;\n\n    /**\r\n     * Deal with dropdown items\r\n     */\n    var dropdownItems = mobileTopNavigation.querySelectorAll('li.dropdown');\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = dropdownItems[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var dropdownItem = _step2.value;\n        dropdownItem.querySelector('a').addEventListener('click', function (event) {\n          event.preventDefault();\n          event.target.nextElementSibling.classList.toggle('collapsed');\n        });\n      }\n      /**\r\n       * Dealing with toggle menu\r\n       */\n\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n          _iterator2[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    mobileTopNavigation.querySelector('i.navigation--top--mobile__heading__menu-toggle').addEventListener('click', function (event) {\n      var menuToggle = event.target;\n      menuToggle.classList.toggle('bfi--menu');\n      menuToggle.classList.toggle('bfi--times');\n      mobileTopNavigation.classList.toggle('collapsed');\n    });\n  };\n\n  for (var _iterator = mobileTopNavigations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n    _loop();\n  }\n} catch (err) {\n  _didIteratorError = true;\n  _iteratorError = err;\n} finally {\n  try {\n    if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n      _iterator[\"return\"]();\n    }\n  } finally {\n    if (_didIteratorError) {\n      throw _iteratorError;\n    }\n  }\n}\n\n},{}],7:[function(require,module,exports){\n\"use strict\";\n\n// Set default value r for circle in svg\nvar progressBars = document.querySelectorAll('.progress-bar');\nvar _iteratorNormalCompletion = true;\nvar _didIteratorError = false;\nvar _iteratorError = undefined;\n\ntry {\n  for (var _iterator = progressBars[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n    var progressBar = _step.value;\n\n    if (progressBar.classList.contains(\"progress-bar--sm\") && progressBar.querySelector('circle')) {\n      progressBar.querySelector('circle').r.baseVal.value = \"9\";\n    } else if (progressBar.classList.contains(\"progress-bar--md\") && progressBar.querySelector('circle')) {\n      progressBar.querySelector('circle').r.baseVal.value = \"11\";\n    } else if (progressBar.classList.contains(\"progress-bar\") && progressBar.querySelector('circle')) {\n      progressBar.querySelector('circle').r.baseVal.value = \"24\";\n    }\n  }\n  /**\r\n   * Progress bar function\r\n   * Parameters:\r\n   * INT percent = percent value\r\n   * STRING id = id of element\r\n   * STRING type = type of progress bar ('circle' or 'horizontal')\r\n  */\n\n} catch (err) {\n  _didIteratorError = true;\n  _iteratorError = err;\n} finally {\n  try {\n    if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n      _iterator[\"return\"]();\n    }\n  } finally {\n    if (_didIteratorError) {\n      throw _iteratorError;\n    }\n  }\n}\n\nwindow.progressBar = function (params) {\n  if (!params.id) return false;\n  var elementId = \"#\" + params.id;\n  var percent = params.percent ? params.percent : 0;\n  var type = params.type ? params.type : 'circle';\n\n  if (type == 'circle' && document.querySelector(elementId)) {\n    // Circle attributes\n    var text = document.querySelector(elementId).querySelector('.progress-bar__text');\n    var circle = document.querySelector(elementId).querySelector('circle');\n    var radius = circle.r.baseVal.value;\n    var circumference = radius * 2 * Math.PI; // Defines the default size of green and gray circle around the icon\n\n    circle.style.strokeDasharray = \"\".concat(circumference, \" \").concat(circumference);\n    circle.style.strokeDashoffset = \"\".concat(circumference); // Calculate the green circle size according to the percentage entered\n\n    var offset = circumference - percent / 100 * circumference;\n    circle.style.strokeDashoffset = offset; // Change percentage text\n\n    if (text) {\n      text.innerHTML = percent + \"%\";\n    } // Change element color when percent is 100\n\n\n    if (percent == 100) {\n      document.querySelector(elementId).classList.add(\"progress-bar--done\");\n    } else {\n      document.querySelector(elementId).classList.remove(\"progress-bar--done\");\n    }\n  } else if (document.querySelector(elementId)) {\n    // Set percent of horizontal progress bar\n    document.querySelector(elementId).value = percent;\n  }\n};\n\n},{}],8:[function(require,module,exports){\n\"use strict\";\n\nvar forms = document.querySelectorAll('.form-validation');\nvar _iteratorNormalCompletion = true;\nvar _didIteratorError = false;\nvar _iteratorError = undefined;\n\ntry {\n  var _loop = function _loop() {\n    var form = _step.value;\n    form.addEventListener(\"submit\", function (event) {\n      // Each time the user tries to send the data, we check all inputs\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = form.querySelectorAll(\"input,textarea,select\")[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var input = _step2.value;\n\n          if (!input.validity.valid) {\n            input.parentElement.classList.add(\"input-group--invalid\");\n            input.parentElement.querySelector('.input-group__alert--error').classList.add(\"input-group__alert--active\");\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }, false);\n  };\n\n  for (var _iterator = forms[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n    _loop();\n  }\n} catch (err) {\n  _didIteratorError = true;\n  _iteratorError = err;\n} finally {\n  try {\n    if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n      _iterator[\"return\"]();\n    }\n  } finally {\n    if (_didIteratorError) {\n      throw _iteratorError;\n    }\n  }\n}\n\n},{}],9:[function(require,module,exports){\n\"use strict\";\n\nrequire('./components/alert');\n\nrequire('./components/navbar');\n\nrequire('./components/validation');\n\nrequire('./components/progressbar');\n\nrequire('./components/collapse');\n\nrequire('./components/custom-select');\n\nmodule.exports = {// Your module right here\n};\n\n},{\"./components/alert\":3,\"./components/collapse\":4,\"./components/custom-select\":5,\"./components/navbar\":6,\"./components/progressbar\":7,\"./components/validation\":8}]},{},[2]);\n"],"file":"main.js"}